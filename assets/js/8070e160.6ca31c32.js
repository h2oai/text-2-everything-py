"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[822],{4143:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"quickstart","title":"Quickstart","description":"This Quickstart gets you from zero to a generated SQL query in ~5 minutes.","source":"@site/docs/quickstart.md","sourceDirName":".","slug":"/quickstart","permalink":"/text-2-everything-py/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Quickstart"},"sidebar":"defaultSidebar","previous":{"title":"Text2Everything SDK","permalink":"/text-2-everything-py/"},"next":{"title":"Installation","permalink":"/text-2-everything-py/installation"}}');var i=n(4848),r=n(8453);const a={title:"Quickstart"},c=void 0,o={},l=[{value:"Installation",id:"installation",level:2},{value:"Minimal setup and first query",id:"minimal-setup-and-first-query",level:2}];function u(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This Quickstart gets you from zero to a generated SQL query in ~5 minutes."}),"\n",(0,i.jsx)(t.p,{children:"Prereqs:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Have a Text2Everything API endpoint and API key"}),"\n",(0,i.jsx)(t.li,{children:"Python 3.9+"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pip install text2everything_sdk-0.1.x-py3-none-any.whl\n"})}),"\n",(0,i.jsx)(t.h2,{id:"minimal-setup-and-first-query",children:"Minimal setup and first query"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'from text2everything_sdk import Text2EverythingClient\n\n# Simple initialization\nclient = Text2EverythingClient(\n    api_key="your-api-key",\n)\n\n# 1) Create a project\nproject = client.projects.create(name="Quickstart Project")\n\n# 2) Add minimal context\nclient.contexts.create(\n    project_id=project.id,\n    name="Business Rules",\n    content="Active customers have status = \'active\'",\n    is_always_displayed=True,\n)\n\n# 3) Add a minimal table schema\nschema = client.schema_metadata.create(\n    project_id=project.id,\n    name="Customers Table",\n    schema_data={\n        "table": {\n            "name": "customers",\n            "columns": [\n                {"name": "id", "type": "INTEGER"},\n                {"name": "name", "type": "VARCHAR(100)"},\n                {"name": "status", "type": "VARCHAR(32)"},\n            ]\n        }\n    },\n)\n\n# 4) Add a golden example for better SQL quality\nclient.golden_examples.create(\n    project_id=project.id,\n    user_query="How many active customers do we have?",\n    sql_query="SELECT COUNT(*) FROM customers WHERE status = \'active\';",\n    description="Count of active customers",\n    is_always_displayed=True,\n)\n\n# 5) Start a chat session\nsession = client.chat_sessions.create(project_id=project.id)\n\n# 6) Ask a question to generate SQL\nresp = client.chat.chat_to_sql(\n    project_id=project.id,\n    chat_session_id=session.id,\n    query="Count active customers",\n)\n\nprint("Generated SQL:", resp.sql_query)\n'})}),"\n",(0,i.jsx)(t.p,{children:"Next steps:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Add golden examples for better quality"}),"\n",(0,i.jsx)(t.li,{children:"Connect your database and use Chat to Answer (executes SQL)"}),"\n",(0,i.jsx)(t.li,{children:"See Guides for resource-specific tasks"}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);
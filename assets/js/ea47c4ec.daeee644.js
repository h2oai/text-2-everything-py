"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[711],{508:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"quick-start/quick-reference","title":"Text2Everything Quick Reference Guide","description":"A condensed reference for developers who have completed the Developer Starter Guide.","source":"@site/docs/quick-start/quick-reference.md","sourceDirName":"quick-start","slug":"/quick-start/quick-reference","permalink":"/text-2-everything-py/quick-start/quick-reference","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Text2Everything Developer & Data Scientist Starter Guide","permalink":"/text-2-everything-py/quick-start/developer-starter-guide"},"next":{"title":"Text2Everything Integration Summary","permalink":"/text-2-everything-py/quick-start/integration-summary"}}');var i=t(4848),a=t(8453);const r={},o="Text2Everything Quick Reference Guide",c={},l=[{value:"\ud83d\ude80 Quick Setup Commands",id:"-quick-setup-commands",level:2},{value:"Environment Setup",id:"environment-setup",level:3},{value:"\ud83d\udcc1 Data Structure Template",id:"-data-structure-template",level:2},{value:"\ud83d\udd27 Essential Code Snippets",id:"-essential-code-snippets",level:2},{value:"1. H2O Drive Connection",id:"1-h2o-drive-connection",level:3},{value:"2. Text2Everything SDK Setup",id:"2-text2everything-sdk-setup",level:3},{value:"3. Create Project",id:"3-create-project",level:3},{value:"4. Snowflake Connector",id:"4-snowflake-connector",level:3},{value:"5. Upload Data (Bulk)",id:"5-upload-data-bulk",level:3},{value:"6. Generate SQL",id:"6-generate-sql",level:3},{value:"\ud83d\udccb Data Format Examples",id:"-data-format-examples",level:2},{value:"Schema Metadata (JSON)",id:"schema-metadata-json",level:3},{value:"Context (JSON)",id:"context-json",level:3},{value:"Golden Example (JSON)",id:"golden-example-json",level:3},{value:"\ud83d\udd0d Quick Diagnostics",id:"-quick-diagnostics",level:2},{value:"Test All Connections",id:"test-all-connections",level:3},{value:"Validate Environment",id:"validate-environment",level:3},{value:"\ud83c\udfaf H2OGPTE UI Configuration",id:"-h2ogpte-ui-configuration",level:2},{value:"CustomGPT Setup Checklist",id:"customgpt-setup-checklist",level:3},{value:"Agent Environment Variables",id:"agent-environment-variables",level:3},{value:"\ud83d\udea8 Common Error Solutions",id:"-common-error-solutions",level:2},{value:"H2O Drive Connection Failed",id:"h2o-drive-connection-failed",level:3},{value:"Text2Everything Authentication Failed",id:"text2everything-authentication-failed",level:3},{value:"Data Upload Validation Errors",id:"data-upload-validation-errors",level:3},{value:"\ud83d\udcda Useful Commands",id:"-useful-commands",level:2},{value:"List Resources",id:"list-resources",level:3},{value:"Batch Operations",id:"batch-operations",level:3},{value:"\ud83d\udd17 Quick Links",id:"-quick-links",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"text2everything-quick-reference-guide",children:"Text2Everything Quick Reference Guide"})}),"\n",(0,i.jsxs)(n.p,{children:["A condensed reference for developers who have completed the ",(0,i.jsx)(n.a,{href:"/text-2-everything-py/quick-start/developer-starter-guide",children:"Developer Starter Guide"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"-quick-setup-commands",children:"\ud83d\ude80 Quick Setup Commands"}),"\n",(0,i.jsx)(n.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install packages\npip install h2o-drive>=4.1.0 text2everything_sdk-0.1.x-py3-none-any.whl python-dotenv tqdm\n\n# Create .env file\ncat > .env << EOF\nH2O_CLOUD_ENVIRONMENT=https://your-environment.h2o.ai/\nH2O_CLOUD_CLIENT_PLATFORM_TOKEN=your-h2o-token-here\nTEXT2EVERYTHING_URL=http://text2everything.text2everything.svc.cluster.local:8000\nH2OGPTE_API_KEY=your-h2ogpte-api-key-here\nSNOWFLAKE_ACCOUNT=your-account.snowflakecomputing.com\nSNOWFLAKE_USERNAME=your-username\nSNOWFLAKE_PASSWORD=your-password\nSNOWFLAKE_DATABASE=your-database\nSNOWFLAKE_WAREHOUSE=COMPUTE_WH\nEOF\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-data-structure-template",children:"\ud83d\udcc1 Data Structure Template"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"your_project_data/\n\u251c\u2500\u2500 schema_metadata/     # Table schemas (JSON)\n\u2502   \u251c\u2500\u2500 customers.json\n\u2502   \u2514\u2500\u2500 orders.json\n\u251c\u2500\u2500 contexts/           # Business rules (JSON)\n\u2502   \u251c\u2500\u2500 business_rules.txt\n\u2502   \u2514\u2500\u2500 data_definitions.json\n\u2514\u2500\u2500 golden_examples/    # Query examples (JSON)\n    \u251c\u2500\u2500 customer_queries.json\n    \u2514\u2500\u2500 sales_queries.json\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-essential-code-snippets",children:"\ud83d\udd27 Essential Code Snippets"}),"\n",(0,i.jsx)(n.h3,{id:"1-h2o-drive-connection",children:"1. H2O Drive Connection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import h2o_drive, h2o_discovery\nfrom dotenv import load_dotenv\n\nload_dotenv()\ndiscovery = h2o_discovery.discover()\ndrive_client = h2o_drive.connect(discovery=discovery)\nbucket = drive_client.user_bucket()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-text2everything-sdk-setup",children:"2. Text2Everything SDK Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from text2everything_sdk import Text2EverythingClient\nimport os\n\nsdk_client = Text2EverythingClient(\n    base_url=os.getenv("TEXT2EVERYTHING_URL"),\n    api_key=os.getenv("H2OGPTE_API_KEY"),\n    timeout=200,\n    max_retries=1\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-create-project",children:"3. Create Project"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'project = sdk_client.projects.create(\n    name="Your Project Name",\n    description="Project description"\n)\nprint(f"Project ID: {project.id}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-snowflake-connector",children:"4. Snowflake Connector"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'snowflake_connector = sdk_client.connectors.create(\n    name="Snowflake Warehouse",\n    db_type="snowflake",\n    host=os.getenv("SNOWFLAKE_ACCOUNT"),\n    port=443,\n    username=os.getenv("SNOWFLAKE_USERNAME"),\n    password=os.getenv("SNOWFLAKE_PASSWORD"),\n    database=os.getenv("SNOWFLAKE_DATABASE"),\n    config={\n        "warehouse": os.getenv("SNOWFLAKE_WAREHOUSE"),\n        "role": "ANALYST_ROLE"\n    }\n)\nprint(f"Connector ID: {snowflake_connector.id}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"5-upload-data-bulk",children:"5. Upload Data (Bulk)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Upload contexts\ncontexts = sdk_client.contexts.bulk_create(\n    project_id=project.id,\n    contexts=contexts_data\n)\n\n# Upload schema metadata\nschemas = sdk_client.schema_metadata.bulk_create(\n    project_id=project.id,\n    schema_metadata_list=schema_data,\n    validate=True\n)\n\n# Upload golden examples\nexamples = sdk_client.golden_examples.bulk_create(\n    project_id=project.id,\n    golden_examples=examples_data\n)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"6-generate-sql",children:"6. Generate SQL"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Create chat session\nsession = sdk_client.chat_sessions.create(project_id=project.id)\n\n# Generate SQL only\nsql_response = sdk_client.chat.chat_to_sql(\n    project_id=project.id,\n    chat_session_id=session.id,\n    query="Your natural language query"\n)\n\n# Generate and execute SQL\nanswer_response = sdk_client.chat.chat_to_answer(\n    project_id=project.id,\n    chat_session_id=session.id,\n    query="Your natural language query",\n    connector_id=snowflake_connector.id\n)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-data-format-examples",children:"\ud83d\udccb Data Format Examples"}),"\n",(0,i.jsx)(n.h3,{id:"schema-metadata-json",children:"Schema Metadata (JSON)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "customers",\n  "description": "Customer information table",\n  "schema_data": {\n    "table": {\n      "name": "customers",\n      "columns": [\n        {"name": "id", "type": "INTEGER", "description": "Primary key"},\n        {"name": "name", "type": "VARCHAR(100)", "description": "Customer name"},\n        {"name": "email", "type": "VARCHAR(255)", "description": "Email address"},\n        {"name": "status", "type": "VARCHAR(32)", "description": "active, inactive, pending"}\n      ]\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"context-json",children:"Context (JSON)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Business Rules",\n  "content": "Active customers have status = \'active\'. High-value customers have total_orders > 1000.",\n  "is_always_displayed": true\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"golden-example-json",children:"Golden Example (JSON)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Active Customer Count",\n  "user_query": "How many active customers do we have?",\n  "sql_query": "SELECT COUNT(*) FROM customers WHERE status = \'active\';",\n  "description": "Count of active customers",\n  "is_always_displayed": true\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-quick-diagnostics",children:"\ud83d\udd0d Quick Diagnostics"}),"\n",(0,i.jsx)(n.h3,{id:"test-all-connections",children:"Test All Connections"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'async def quick_test():\n    # H2O Drive\n    objects = await bucket.list_objects()\n    print(f"H2O Drive: {len(objects)} objects")\n    \n    # Text2Everything\n    projects = sdk_client.projects.list()\n    print(f"T2E: {len(projects)} projects")\n    \n    # Snowflake (if configured)\n    if snowflake_connector:\n        ok = sdk_client.connectors.test_connection(snowflake_connector.id)\n        print(f"Snowflake: {\'\u2705\' if ok else \'\u274c\'}")\n\nawait quick_test()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"validate-environment",children:"Validate Environment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'required_vars = [\n    "H2O_CLOUD_ENVIRONMENT", "H2O_CLOUD_CLIENT_PLATFORM_TOKEN",\n    "TEXT2EVERYTHING_URL", "H2OGPTE_API_KEY"\n]\n\nmissing = [var for var in required_vars if not os.getenv(var)]\nif missing:\n    print(f"\u274c Missing: {missing}")\nelse:\n    print("\u2705 All required variables set")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-h2ogpte-ui-configuration",children:"\ud83c\udfaf H2OGPTE UI Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"customgpt-setup-checklist",children:"CustomGPT Setup Checklist"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Navigate to ",(0,i.jsx)(n.code,{children:"https://h2ogpte.your_domain_id.dedicated.h2o.ai/"})]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'Create Collection: "H2O Drive Analytics Collection"']}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'Create Custom Prompt: "H2O Drive SQL Assistant"']}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure system prompt with business rules"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set model to claude-3-7"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Attach prompt to collection"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Select tools: Python and Shell Scripting"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test with sample queries"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"agent-environment-variables",children:"Agent Environment Variables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# In H2OGPTE UI > Agents > Authentication tab\nTEXT2EVERYTHING_URL = "http://text2everything.text2everything.svc.cluster.local:8000"\nTEXT2EVERYTHING_PROJECT_ID = "<your_project_id>"\nTEXT2EVERYTHING_CONNECTOR_ID = "<your_connector_id>"\nH2OGPTE_API_KEY = "<your_api_key>"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-common-error-solutions",children:"\ud83d\udea8 Common Error Solutions"}),"\n",(0,i.jsx)(n.h3,{id:"h2o-drive-connection-failed",children:"H2O Drive Connection Failed"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Check environment variables\nprint("Environment:", os.getenv(\'H2O_CLOUD_ENVIRONMENT\'))\nprint("Token set:", bool(os.getenv(\'H2O_CLOUD_CLIENT_PLATFORM_TOKEN\')))\n\n# Test discovery\ntry:\n    discovery = h2o_discovery.discover()\n    print("\u2705 Discovery successful")\nexcept Exception as e:\n    print(f"\u274c Discovery failed: {e}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"text2everything-authentication-failed",children:"Text2Everything Authentication Failed"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Verify API key and URL\nprint(\"URL:\", os.getenv('TEXT2EVERYTHING_URL'))\nprint(\"API Key set:\", bool(os.getenv('H2OGPTE_API_KEY')))\n\n# Test connection\ntry:\n    test_client = Text2EverythingClient(\n        base_url=os.getenv('TEXT2EVERYTHING_URL'),\n        api_key=os.getenv('H2OGPTE_API_KEY')\n    )\n    projects = test_client.projects.list()\n    print(f\"\u2705 Connected, {len(projects)} projects\")\nexcept Exception as e:\n    print(f\"\u274c Failed: {e}\")\n"})}),"\n",(0,i.jsx)(n.h3,{id:"data-upload-validation-errors",children:"Data Upload Validation Errors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Use SDK\'s built-in validation method\ntable_schema = {\n    "table": {\n        "name": "customers",\n        "columns": [{"name": "id", "type": "INTEGER"}]\n    }\n}\n\n# Validate schema before upload\nerrors = sdk_client.schema_metadata.validate_schema(table_schema, "table")\nif errors:\n    print(f"\u274c Validation errors: {errors}")\nelse:\n    print("\u2705 Schema is valid")\n\n# Validate dimension schema\ndimension_schema = {\n    "table": {\n        "name": "customers",\n        "dimension": {\n            "name": "status",\n            "content": {"type": "categorical", "values": ["active", "inactive"]}\n        }\n    }\n}\n\nerrors = sdk_client.schema_metadata.validate_schema(dimension_schema, "dimension")\nif errors:\n    print(f"\u274c Dimension errors: {errors}")\nelse:\n    print("\u2705 Dimension valid")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-useful-commands",children:"\ud83d\udcda Useful Commands"}),"\n",(0,i.jsx)(n.h3,{id:"list-resources",children:"List Resources"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# List projects\nprojects = sdk_client.projects.list()\nfor p in projects:\n    print(f"{p.name} (ID: {p.id})")\n\n# List connectors\nconnectors = sdk_client.connectors.list()\nfor c in connectors:\n    print(f"{c.name} ({c.db_type}) - ID: {c.id}")\n\n# List contexts for project\ncontexts = sdk_client.contexts.list(project_id=project.id)\nprint(f"Found {len(contexts)} contexts")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"batch-operations",children:"Batch Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Process in batches for large datasets\ndef batch_upload(items, batch_size=10):\n    for i in range(0, len(items), batch_size):\n        batch = items[i:i+batch_size]\n        # Upload batch\n        result = sdk_client.contexts.bulk_create(\n            project_id=project.id,\n            contexts=batch\n        )\n        print(f"Batch {i//batch_size + 1}: {len(result)} uploaded")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-quick-links",children:"\ud83d\udd17 Quick Links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/text-2-everything-py/quick-start/developer-starter-guide",children:"Full Developer Guide"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://h2oai.github.io/text-2-everything-py/",children:"SDK Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.h2o.ai/h2o-drive/",children:"H2O Drive Docs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/text-2-everything-py/guides/connectors",children:"Snowflake Connector Guide"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/text-2-everything-py/how-to/bulk_operations",children:"Bulk Operations Guide"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Keep this reference handy for quick lookups during development! \ud83d\udcd6"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);
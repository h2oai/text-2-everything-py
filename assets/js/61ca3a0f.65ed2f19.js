"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[798],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const s={},c=o.createContext(s);function r(e){const n=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(c.Provider,{value:n},e.children)}},9781:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"guides/connectors","title":"Connectors","description":"Manage database connectors used to execute SQL.","source":"@site/docs/guides/connectors.md","sourceDirName":"guides","slug":"/guides/connectors","permalink":"/text-2-everything-py/guides/connectors","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Connectors"},"sidebar":"defaultSidebar","previous":{"title":"Golden Examples","permalink":"/text-2-everything-py/guides/golden_examples"},"next":{"title":"Chat Sessions","permalink":"/text-2-everything-py/guides/chat_sessions"}}');var s=t(4848),c=t(8453);const r={title:"Connectors"},i=void 0,a={},l=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Manage database connectors used to execute SQL."}),"\n",(0,s.jsx)(n.p,{children:"Create/list/get/update/delete:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from text2everything_sdk import Text2EverythingClient\n\nclient = Text2EverythingClient(base_url="https://...", api_key="...")\n\n# Create\nconn = client.connectors.create(\n    name="Production DB",\n    db_type="postgres",\n    host="db.example.com",\n    port=5432,\n    username="app_user",\n    password="secure_password",\n    database="production",\n)\n\n# List / get\nconnectors = client.connectors.list()\none = client.connectors.get(conn.id)\n\n# Update\nupdated = client.connectors.update(conn.id, port=5433, description="Updated")\n\n# Delete\nclient.connectors.delete(conn.id)\n'})}),"\n",(0,s.jsx)(n.p,{children:"Test connection (basic):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"ok = client.connectors.test_connection(conn.id)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Filter by type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'pg = client.connectors.list_by_type("postgres")\n'})}),"\n",(0,s.jsx)(n.p,{children:"Snowflake connector example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from text2everything_sdk import Text2EverythingClient\n\nclient = Text2EverythingClient(base_url="https://...", api_key="...")\n\nsnowflake_conn = client.connectors.create(\n    name="Snowflake - Analytics",\n    db_type="snowflake",\n    host="<account>.<region>.snowflakecomputing.com",\n    username="USER",\n    password="PASSWORD",\n    database="DB",\n    config={\n        "warehouse": "COMPUTE_WH",\n        "role": "ANALYST",\n        "schema": "PUBLIC",\n    },\n)\n\n# Optional: test the connection\nok = client.connectors.test_connection(snowflake_conn.id)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);